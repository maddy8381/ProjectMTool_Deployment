{"version":3,"sources":["components/Project/CreateProjectButton.js","actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","reportWebVitals.js","index.js"],"names":["CreateProjectButton","to","className","GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","projectIdentifier","projectName","description","onClick","bind","Component","protoTypes","PropTypes","func","isRequired","connect","window","confirm","delete","Dashboard","getProjects","projects","Fragment","map","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","classNames","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","created_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3857e206.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst CreateProjectButton = () => {\r\n    return (\r\n        <Link to=\"/addProject\"  className=\"btn btn-lg btn-info\">\r\n            Create a Project\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default CreateProjectButton\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n\r\n//Types for Backlog Actions'\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\n\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import axios from \"axios\"\r\nimport {DELETE_PROJECT, GET_ERRORS, GET_PROJECT, GET_PROJECTS} from \"./types\"\r\n\r\n\r\nexport const createProject = (project, history) => async dispatch  =>{\r\n    try{\r\n        await axios.post(\"/api/project\", project)\r\n        history.push(\"/dashboard\");\r\n        dispatch({ //Clearing Error Payload state if there are no errors\r\n            type: GET_ERRORS,\r\n            payload:{}\r\n        })\r\n    }catch(err){\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload:err.response.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n    const res = await axios.get(\"/api/project/all\")\r\n    dispatch({\r\n        type: GET_PROJECTS,\r\n        payload: res.data\r\n    })\r\n}\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n    try{\r\n        const res = await axios.get(`/api/project/${id}`); //use backtics whenever we need to pass id\r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        });\r\n    } catch(error){\r\n        history.push(\"/dashboard\"); //If user delibrately put other id in url redirect him to dashboard\r\n    }\r\n    \r\n}\r\n\r\nexport const deleteProject = (id) => async dispatch => {\r\n\r\n    if(window.confirm(\"Are you sure? This will delete the project and all the data related to it.\")){\r\n\r\n        await axios.delete(`/api/project/${id}`);\r\n        dispatch({\r\n            type: DELETE_PROJECT,\r\n            payload: id\r\n        });\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  \r\n  onDeleteClick = id => {\r\n      this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const {project} = this.props; //Destructing the prop we got \r\n    return (\r\n      \r\n        <div className=\"container\">\r\n            <div className=\"card card-body bg-light mb-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\">\r\n                        <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n                    </div>\r\n                    <div className=\"col-lg-6 col-md-4 col-8\">\r\n                        <h3>{project.projectName}</h3>\r\n                        <p>{project.description}</p>\r\n                    </div>\r\n                    <div className=\"col-md-4 d-none d-lg-block\">\r\n                        <ul className=\"list-group\">\r\n                            <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                                <li className=\"list-group-item board\">\r\n                                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                                </li>\r\n                            </Link>\r\n                                \r\n                            <Link to={`/updateProject/${project.projectIdentifier}`}> \r\n                                <li className=\"list-group-item update\">\r\n                                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                                </li>\r\n                            </Link>\r\n\r\n                                <li className=\"list-group-item delete\" onClick={this.onDeleteClick.bind(this, project.projectIdentifier)}>\r\n                                    <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                                </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.protoTypes = {\r\n    deleteProject: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {deleteProject})(ProjectItem);\r\n","import React, { Component } from 'react';\r\nimport CreateProjectButton from './Project/CreateProjectButton';\r\nimport ProjectItem from './Project/ProjectItem';\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nclass Dashboard extends Component {\r\n\r\n  componentDidMount(){\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const {projects} = this.props.project\r\n    return (\r\n     <React.Fragment>\r\n        <div className=\"projects\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"display-4 text-center\">Projects</h1>\r\n                        <br />\r\n                        <CreateProjectButton />\r\n                        <br />\r\n                        <hr />\r\n                        {projects.map(project=>( //Passing One by one object from List as a prop to ProjectItem Component\r\n\r\n                          <ProjectItem key={project.id} project={project} />\r\n                        ))\r\n\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project,\r\n\r\n})\r\n\r\n//Connecting this component to store by using this\r\nexport default connect(mapStateToProps, {getProjects})(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n    if (token) {\r\n        axios.defaults.headers.common[\"Authorization\"] = token; //Setting Header for Authorization \r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setJWTToken;","import axios from \"axios\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n\r\n    try {\r\n        await axios.post(\"/api/users/register\", newUser);\r\n        history.push(\"/login\");\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n    try {\r\n        // post => Login Request\r\n        const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n        // Extract token from res.data\r\n        const { token } = res.data;\r\n        // Store the token in localstorage\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        // Set our token in header *** to pass as a authorization token for subsequent requests.\r\n        setJWTToken(token);\r\n        // decode the token on react\r\n        const decoded = jwt_decode(token);\r\n        // dispatch to our securityReducer\r\n        dispatch({\r\n            type: SET_CURRENT_USER,\r\n            payload: decoded\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    setJWTToken(false); //delete Authorization from header\r\n    dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: {}\r\n    });\r\n}","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n    logout() {\r\n        this.props.logout();\r\n        window.location.href = \"/\";\r\n    }\r\n    render() {\r\n\r\n        const { validToken, user } = this.props.security;\r\n\r\n        const userIsAuthenticated = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/dashboard\">\r\n                            Dashboard\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link \" to=\"/dashboard\">\r\n                            <i className=\"fas fa-user-circle mr-1\" />{user.fullName}\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/logout\" onClick={this.logout.bind(this)}>\r\n                            Logout\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n\r\n        const userIsNotAuthenticated = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link \" to=\"/register\">\r\n                            Sign Up\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/login\">\r\n                            Login\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n\r\n        let headerLinks;\r\n        if (validToken && user) {\r\n            headerLinks = userIsAuthenticated;\r\n        } else {\r\n            headerLinks = userIsNotAuthenticated;\r\n        }\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n                <div className=\"container\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        Personal Project Management Tool\r\n                    </Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                        <span className=\"navbar-toggler-icon\" />\r\n                    </button>\r\n                    {headerLinks}\r\n\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from 'react'\r\nimport PropTypes from \"prop-types\"\r\nimport {connect} from \"react-redux\"\r\nimport {createProject} from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nexport class AddProject extends Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            projectName: \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            start_date: \"\",\r\n            end_date: \"\",\r\n            errors: {}\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    //life cycle hook\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors:nextProps.errors});\r\n        }\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value});\r\n    }\r\n\r\n    onSubmit(e){\r\n        //Disabling application Refresh on Submit\r\n        e.preventDefault();\r\n\r\n        //Creating new Object\r\n        const newProject = {\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            start_date: this.state.start_date,\r\n            end_date: this.state.end_date\r\n        }\r\n\r\n        this.props.createProject(newProject, this.props.history);\r\n    }\r\n\r\n    render() {\r\n         const {errors} = this.state; //Destructuring\r\n         \r\n        return (\r\n            <div className=\"project\">\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h5 className=\"display-4 text-center\">Create / Edit Project form</h5>\r\n                            <hr />\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">                                    \r\n                                    <input type=\"text\" \r\n                                       className={classnames(\"form-control form-control-lg \",{\r\n                                         \"is-invalid\": errors.projectName\r\n                                        })} \r\n                                       placeholder=\"Project Name\" name=\"projectName\" value={this.state.projectName} onChange={this.onChange}\r\n                                    />\r\n                                    {errors.projectName && (\r\n                                        <div classNames=\"invalid-feedback\">{errors.projectName} </div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg \",{ \r\n                                        \"is-invalid\": errors.projectIdentifier //main thing - if any error then make it red box\r\n                                       })} \r\n                                       placeholder=\"Unique Project ID\" name=\"projectIdentifier\" value={this.state.projectIdentifier} onChange={this.onChange} \r\n                                    />\r\n                                    {errors.projectIdentifier && ( //To show msg if any\r\n                                        <div classNames=\"invalid-feedback\">{errors.projectIdentifier} </div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea \r\n                                        className={classnames(\"form-control form-control-lg \",{\r\n                                        \"is-invalid\": errors.description\r\n                                       })} \r\n                                        placeholder=\"Project Description\" name=\"description\"  value={this.state.description} onChange={this.onChange}\r\n                                    />\r\n                                    {errors.description && (\r\n                                        <div classNames=\"invalid-feedback\">{errors.description} </div>\r\n                                    )}\r\n                                </div>\r\n                                <h6>Start Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" className=\"form-control form-control-lg\" name=\"start_date\" value={this.state.start_date} onChange={this.onChange} />\r\n                                </div>\r\n                                <h6>Estimated End Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" className=\"form-control form-control-lg\" name=\"end_date\" value={this.state.end_date} onChange={this.onChange} />\r\n                                </div>\r\n\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddProject.propTypes = {\r\n    createProject : PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, {createProject}) (AddProject);\r\n","import {GET_ERRORS} from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function anyFuncName(state=initialState, action) {\r\n    \r\n    switch(action.type){\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { act } from \"react-dom/test-utils\";\r\nimport {DELETE_PROJECT, GET_PROJECT, GET_PROJECTS} from \"../actions/types\"\r\n\r\nconst initialState = {\r\n    projects: [],\r\n    project: {}\r\n}\r\n\r\nexport default function anyFunctionName(state = initialState, action){\r\n    \r\n    switch(action.type){\r\n        case GET_PROJECTS: \r\n            return{\r\n                ...state,\r\n                projects: action.payload\r\n            };\r\n        \r\n        case GET_PROJECT:\r\n            return{\r\n                ...state,\r\n                project: action.payload\r\n            };\r\n\r\n        case DELETE_PROJECT:\r\n            return{\r\n                ...state,\r\n                projects: state.projects.filter(\r\n                    project => project.projectIdentifier !== action.payload\r\n                )\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    project_tasks: [],\r\n    project_task: {}\r\n}\r\n\r\nexport default function AnyFunName(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_BACKLOG:\r\n            return {\r\n                ...state,\r\n                project_tasks: action.payload\r\n            };\r\n\r\n        case GET_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                project_task: action.payload\r\n            };\r\n\r\n        case DELETE_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                project_tasks: state.project_tasks.filter(project_task => project_task.projectSequence !== action.payload)\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    user: {},\r\n    validToken: false\r\n}\r\n\r\nconst booleanActionPayload = (payload) => {\r\n    if (payload) {\r\n        return true;\r\n    } else\r\n        return false;\r\n}\r\n\r\nexport default function name(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                validToken: booleanActionPayload(action.payload),\r\n                user: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","//This is the Root Reducer\r\nimport { combineReducers } from \"redux\"\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n    errors: errorReducer,\r\n    project: projectReducer,\r\n    backlog: backlogReducer,\r\n    security: securityReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport rootReducer from \"./reducers\"\r\n\r\nconst initialState = {}\r\nconst middleware = [thunk]\r\n\r\nlet store;\r\n\r\n//Removing -bug : if the client dont have react and redux ext, oR if opened in Incognito mode our app was not working - removed by this\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n    store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware),\r\n        ReactReduxDevTools));\r\n} else {\r\n    store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware)));\r\n}\r\n\r\nexport default store;","import React, { Component } from \"react\"\r\nimport { getProject, createProject } from \"../../actions/projectActions\"\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            projectName: \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            start_date: \"\",\r\n            end_date: \"\",\r\n            errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\t\r\n\r\n        if(nextProps.errors){\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n\r\n        const {\t\r\n          id,\t\r\n          projectName,\t\r\n          projectIdentifier,\t\r\n          description,\t\r\n          start_date,\t\r\n          end_date\t\r\n        } = nextProps.project;\t\r\n        this.setState({\t\r\n          id,\t\r\n          projectName,\t\r\n          projectIdentifier,\t\r\n          description,\t\r\n          start_date,\t\r\n          end_date\t\r\n        });\t\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { id } = this.props.match.params;\r\n        this.props.getProject(id, this.props.history);\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const updateProject = {\r\n            id: this.state.id,\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            start_date: this.state.start_date,\r\n            end_date: this.state.end_date\r\n        };\r\n\r\n        this.props.createProject(updateProject, this.props.history);\r\n    }\r\n\r\n    render() {\r\n    \r\n     const { errors } = this.state;   \r\n     return (            \r\n        <div className=\"project\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n                        <hr />\r\n                        <form onSubmit = {this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" \r\n                                  className={classnames(\"form-control form-control-lg\", {\r\n                                    \"is-invalid\": errors.projectName\r\n                                  })}\r\n                                 placeholder=\"Project Name\" name=\"projectName\" value={this.state.projectName} onChange={this.onChange} />\r\n                                 {\r\n                                     errors.projectName && (\r\n                                         <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                                     )\r\n                                 }\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Unique Project ID\"\r\n                                   name=\"projectIdentifier\" value={this.state.projectIdentifier} onChange={this.onChange}  disabled />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <textarea  \r\n                                className={classnames(\"form-control form-control-lg\", {\r\n                                  \"is-invalid\": errors.description\r\n                                })}\r\n                                 placeholder=\"Project Description\" name=\"description\" value={this.state.description}\r\n                                onChange={this.onChange} ></textarea>\r\n                                {\r\n                                    errors.description && (\r\n                                        <div className=\"invalid-feedback\">{errors.description}</div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                            <h6>Start Date</h6>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"date\" className=\"form-control form-control-lg\" name=\"start_date\" value={this.state.start_date}  onChange={this.onChange} />\r\n                            </div>\r\n                            <h6>Estimated End Date</h6>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"date\" className=\"form-control form-control-lg\" name=\"end_date\" value={this.state.end_date} onChange={this.onChange}  />\r\n                            </div>\r\n\r\n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                        </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n    getProject: PropTypes.func.isRequired,\r\n    createProject: PropTypes.func.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project.project,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, {getProject, createProject})(UpdateProject);\r\n","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nclass ProjectTask extends Component {\r\n\r\n    onDeleteClick(backlog_id, pt_id) {\r\n        this.props.deleteProjectTask(backlog_id, pt_id);\r\n    }\r\n\r\n    render() {\r\n        const { project_task } = this.props;\r\n        let priorityString;\r\n        let priorityClass;\r\n\r\n        if (project_task.priority === 1) {\r\n            priorityClass = \"bg-danger text-light\"\r\n            priorityString = \"HIGH\"\r\n        } else if (project_task.priority === 2) {\r\n            priorityClass = \"bg-warning text-light\"\r\n            priorityString = \"MEDIUM\"\r\n        } else {\r\n            priorityClass = \"bg-info text-light\"\r\n            priorityString = \"LOW\"\r\n        }\r\n\r\n\r\n\r\n        return (\r\n\r\n            <div className=\"card mb-1 bg-light\">\r\n                <div className={`card-header text-primary text-light ${priorityClass}}`}>\r\n                    ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n                </div>\r\n                <div className=\"card-body bg-light\">\r\n                    <h5 className=\"card-title\">{project_task.summary}</h5>\r\n                    <p className=\"card-text text-truncate \">\r\n                        {project_task.acceptanceCriteria}\r\n                    </p>\r\n                    <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`} className=\"btn btn-primary\">\r\n                        View / Update\r\n                    </Link>\r\n\r\n                    <button className=\"btn btn-danger ml-4\" onClick={this.onDeleteClick.bind(this, project_task.projectIdentifier, project_task.projectSequence)}>\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n    deleteProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"./types\";\r\n\r\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch => {\r\n\r\n    try {\r\n        await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n        history.push(`/projectBoard/${backlog_id}`);\r\n        dispatch({ //Clearing Error Payload state if there are no errors\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_BACKLOG,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async dispatch => {\r\n\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n        dispatch({\r\n            type: GET_PROJECT_TASK,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        history.push(\"/dashboard\");\r\n    }\r\n\r\n};\r\n\r\nexport const updateProjectTask = (backlog_id, pt_id, project_task, history) => async dispatch => {\r\n\r\n    try {\r\n        await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task); //using patch\r\n        history.push(`/projectBoard/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n}\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n\r\n    if (window.confirm(`You are deleting project task ${pt_id}, this action cannot be undone`)) {\r\n        await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n        dispatch({\r\n            type: DELETE_PROJECT_TASK,\r\n            payload: pt_id\r\n        });\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\nimport ProjectTask from './ProjectTasks/ProjectTask'\r\n\r\nclass Backlog extends Component {\r\n    render() {\r\n\r\n        const { project_tasks_prop } = this.props;\r\n        const tasks = project_tasks_prop.map(project_task => (\r\n            <ProjectTask key={project_task.id} project_task={project_task} />\r\n        ));\r\n        \r\n        let todoItems= [];\r\n        let inProgressItems = [];\r\n        let doneItems = [];\r\n\r\n        for(let i=0; i<tasks.length; i++){\r\n            if(tasks[i].props.project_task.status === \"TO_DO\"){\r\n                todoItems.push(tasks[i]);\r\n            }\r\n\r\n            if(tasks[i].props.project_task.status === \"IN_PROGRESS\"){\r\n                inProgressItems.push(tasks[i]);\r\n            }\r\n\r\n            if(tasks[i].props.project_task.status === \"DONE\"){\r\n                doneItems.push(tasks[i]);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-secondary text-white\">\r\n                                <h3>TO DO</h3>\r\n                            </div>\r\n                        </div>\r\n                        {todoItems}\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-primary text-white\">\r\n                                <h3>In Progress</h3>\r\n                            </div>\r\n                        </div>\r\n                        {inProgressItems}\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-success text-white\">\r\n                                <h3>Done</h3>\r\n                            </div>\r\n                        </div>\r\n                        {doneItems}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport Backlog from './Backlog';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from '../../actions/backlogActions';\r\n\r\nclass ProjectBoard extends Component {\r\n\r\n    //Constructor to handle errors\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params; //extracting Id from URL\r\n        this.props.getBacklog(id);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { id } = this.props.match.params;\r\n        const { project_tasks } = this.props.backlog;\r\n        const { errors } = this.state;\r\n\r\n        let BoardContent;\r\n\r\n        const boardAlgorithm = (errors, project_tasks) => {\r\n            if (project_tasks.length < 1) { //Empty\r\n                if (errors.projectNotFound) {\r\n                    return (\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                            {errors.projectNotFound}\r\n                        </div>\r\n                    );\r\n                } else if (errors.projectIdentifier) {\r\n                    return (\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                            {errors.projectIdentifier}\r\n                        </div>\r\n                    );\r\n                } else {\r\n                    return (\r\n                        <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                            No Project Tasks on this board\r\n                        </div>\r\n                    );\r\n                }\r\n            } else {\r\n                return <Backlog project_tasks_prop={project_tasks} />;\r\n            }\r\n        };\r\n\r\n        BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n                    <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n                </Link>\r\n                <br />\r\n                <hr />\r\n                {BoardContent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n    backlog: PropTypes.object.isRequired,\r\n    getBacklog: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    backlog: state.backlog,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard); //connecting ProjectBoard to store\r\n","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\";\r\nimport classnames  from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AddProject } from '../../Project/AddProject';\r\n\r\n class AddProjectTask extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        const {id} = this.props.match.params;\r\n        this.state ={\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: 0,\r\n            dueDate: \"\",\r\n            projectIdentifier: id,\r\n            errors: {}\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const newTask = {\r\n            summary: this.state.summary ,\r\n            acceptanceCriteria: this.state.acceptanceCriteria ,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate\r\n        };\r\n\r\n        this.props.addProjectTask(this.state.projectIdentifier, newTask, this.props.history);\r\n    }\r\n\r\n    render() {\r\n        const {id} = this.props.match.params;\r\n        const { errors } = this.state; //destructuring \r\n        return (\r\n            \r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                                Back to Project Board\r\n                            </Link>\r\n                            <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n                            <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" \r\n                                    className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.summary\r\n                                    })} \r\n                                    name=\"summary\" placeholder=\"Project Task summary\"\r\n                                    value={this.state.summary} onChange={this.onChange} />\r\n                                    {\r\n                                        errors.summary && (\r\n                                            <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                \r\n\r\n                                <div className=\"form-group\">\r\n                                    <textarea className=\"form-control form-control-lg\" placeholder=\"Acceptance Criteria\" name=\"acceptanceCriteria\"\r\n                                    value={this.state.acceptanceCriteria} onChange={this.onChange}></textarea>\r\n                                </div>\r\n                                <h6>Due Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" className=\"form-control form-control-lg\" name=\"dueDate\" value={this.state.dueDate} onChange={this.onChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\" name=\"priority\" value={this.state.priority} onChange={this.onChange}>\r\n                                        <option value={0}>Select Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\" name=\"status\" value={this.state.status} onChange={this.onChange}>\r\n                                        <option value=\"\">Select Status</option>\r\n                                        <option value=\"TO_DO\">TO DO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n    addProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state=>({\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, {addProjectTask})(AddProjectTask);\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { getProjectTask, updateProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            projectSequence: \"\",\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: \"\",\r\n            dueDate: \"\",\r\n            projectIdentifier: \"\",\r\n            created_At: \"\",\r\n            errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { backlog_id, pt_id } = this.props.match.params; //Capturing from url passed by routes as props\r\n        this.props.getProjectTask(backlog_id, pt_id, this.props.history)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n\r\n        const {\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            created_At\r\n        } = nextProps.project_task;\r\n\r\n        this.setState({\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            created_At\r\n        });\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const UpdateProjectTask = {\r\n            id: this.state.id,\r\n            projectSequence: this.state.projectSequence,\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            created_At: this.state.created_At\r\n        };\r\n\r\n        this.props.updateProjectTask(this.state.projectIdentifier, this.state.projectSequence, UpdateProjectTask, this.props.history);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/projectBoard/${this.state.projectIdentifier}`} className=\"btn btn-light\">\r\n                                Back to Project Board\r\n                            </Link>\r\n                            <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n                            <p className=\"lead text-center\">Project Name: {this.state.projectIdentifier} | Project Task ID: {this.state.projectSequence}</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.summary\r\n                                        })}\r\n                                        name=\"summary\" placeholder=\"Project Task summary\"\r\n                                        value={this.state.summary} onChange={this.onChange} />\r\n                                    {\r\n                                        errors.summary && (\r\n                                            <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea className=\"form-control form-control-lg\" placeholder=\"Acceptance Criteria\" name=\"acceptanceCriteria\"\r\n                                        value={this.state.acceptanceCriteria} onChange={this.onChange}></textarea>\r\n                                </div>\r\n                                <h6>Due Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" className=\"form-control form-control-lg\" name=\"dueDate\" value={this.state.dueDate} onChange={this.onChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\" name=\"priority\" value={this.state.priority} onChange={this.onChange}>\r\n                                        <option value={0}>Select Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\" name=\"status\" value={this.state.status} onChange={this.onChange}>\r\n                                        <option value=\"\">Select Status</option>\r\n                                        <option value=\"TO_DO\">TO DO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n    getProjectTask: PropTypes.func.isRequired,\r\n    project_task: PropTypes.object.isRequired,\r\n    updateProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    project_task: state.backlog.project_task,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(UpdateProjectTask);\r\n","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n\r\n    componentDidMount() {\r\n        //If user is already logged in redirect him to dasbhard\r\n        if (this.props.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n                <div className=\"light-overlay landing-inner text-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\r\n                                <p className=\"lead\">\r\n                                    Create your account to join active projects or start your own\r\n                                </p>\r\n                                <hr />\r\n                                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                                    Sign Up\r\n                                </Link>\r\n                                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                                    Login\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLanding.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from 'react'\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\n\r\nclass Register extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            fullName: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //If user is already logged in redirect him to dasbhard\r\n        if (this.props.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            })\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            username: this.state.username,\r\n            fullName: this.state.fullName,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword\r\n        };\r\n\r\n        this.props.createNewUser(newUser, this.props.history);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <div className=\"register\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                            <p className=\"lead text-center\">Create your Account</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.fullName\r\n                                        })}\r\n                                        placeholder=\"Full Name\" name=\"fullName\"\r\n                                        value={this.state.fullName} onChange={this.onChange} />\r\n                                    {\r\n                                        errors.fullName && (\r\n                                            <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"email\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.username\r\n                                    })}\r\n                                        placeholder=\"Email Address (Username)\" name=\"username\"\r\n                                        value={this.state.username} onChange={this.onChange} />\r\n                                    {\r\n                                        errors.username && (\r\n                                            <div className=\"invalid-feedback\">{errors.username}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.password\r\n                                    })}\r\n                                        placeholder=\"Password\" name=\"password\"\r\n                                        value={this.state.password} onChange={this.onChange} />\r\n                                    {\r\n                                        errors.password && (\r\n                                            <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.confirmPassword\r\n                                    })}\r\n                                        placeholder=\"Confirm Password\"\r\n                                        name=\"confirmPassword\" value={this.state.confirmPassword} onChange={this.onChange} />\r\n                                    {\r\n                                        errors.confirmPassword && (\r\n                                            <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nRegister.propTypes = {\r\n    createNewUser: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors,\r\n    security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\"\r\n\r\nclass Login extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const LoginRequest = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        };\r\n\r\n        this.props.login(LoginRequest);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //If user is already logged in redirect him to dasbhard\r\n        if (this.props.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { errors } = this.state\r\n\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Log In</h1>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.username\r\n                                        })}\r\n                                        placeholder=\"Email Address\" name=\"username\"\r\n                                        value={this.state.username} onChange={this.onChange} />\r\n\r\n                                    {\r\n                                        errors.username && (\r\n                                            <div className=\"invalid-feedback\">{errors.username}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.password\r\n                                        })}\r\n                                        placeholder=\"Password\" name=\"password\"\r\n                                        value={this.state.password} onChange={this.onChange} />\r\n                                    {\r\n                                        errors.password && (\r\n                                            <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { Component } from 'react'\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n    <Route\r\n        {...otherProps}\r\n        render={props =>\r\n            security.validToken === true ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                    <Redirect to=\"/login\" />\r\n                )\r\n        }\r\n    />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);","import './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from './components/Project/AddProject';\nimport { Provider } from \"react-redux\" //This allows us to hook up react with redux \nimport store from './store';\nimport UpdateProject from './components/Project/UpdateProject';\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard';\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask';\nimport Landing from './components/Layout/Landing';\nimport Register from './components/UserManagement/Register';\nimport Login from './components/UserManagement/Login';\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from './actions/types';\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\n//If we refresh page the token goes away - to prevent this we are extracting token from localStorage and setting token\n//everytime we update/go because of all of the routes \nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({ //dispatch this back onto our state\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) { // it is expired\n    //Handle Logout\n    store.dispatch(logout()); //dispatch to redux store\n    window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n\n          {\n            //Public Routes\n          }\n\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n\n          {\n            //Private Routes\n          }\n          <switch>\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n            <SecuredRoute exact path=\"/updateProject/:id\" component={UpdateProject} />\n            <SecuredRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n            <SecuredRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask} />\n            <SecuredRoute exact path=\"/updateProjectTask/:backlog_id/:pt_id\" component={UpdateProjectTask} />\n          </switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}